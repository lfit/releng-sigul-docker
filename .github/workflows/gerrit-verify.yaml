---
name: Gerrit Verify

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
    inputs:
      GERRIT_BRANCH:
        description: "Branch that change is against"
        required: true
        type: string
      GERRIT_CHANGE_ID:
        description: "The ID for the change"
        required: true
        type: string
      GERRIT_CHANGE_NUMBER:
        description: "The Gerrit number"
        required: true
        type: string
      GERRIT_CHANGE_URL:
        description: "URL to the change"
        required: true
        type: string
      GERRIT_EVENT_TYPE:
        description: "Type of Gerrit event"
        required: true
        type: string
      GERRIT_PATCHSET_NUMBER:
        description: "The patch number for the change"
        required: true
        type: string
      GERRIT_PATCHSET_REVISION:
        description: "The revision sha"
        required: true
        type: string
      GERRIT_PROJECT:
        description: "Project in Gerrit"
        required: true
        type: string
      GERRIT_REFSPEC:
        description: "Gerrit refspec of change"
        required: true
        type: string

concurrency:
  group: ${{ github.event.inputs.GERRIT_CHANGE_ID || github.run_id }}
  cancel-in-progress: true

jobs:
  clear-vote:
    runs-on: ubuntu-latest
    steps:
      - name: Clear votes
        uses: lfit/gerrit-review-action@v0.4
        with:
          host: ${{ vars.LFIT_GERRIT_SERVER }}
          username: ${{ vars.LFIT_GERRIT_SSH_USER }}
          key: ${{ secrets.LFIT_GERRIT_SSH_PRIVKEY_NP }}
          known_hosts: ${{ vars.LFIT_GERRIT_KNOWN_HOSTS }}
          gerrit-change-number: ${{ inputs.GERRIT_CHANGE_NUMBER }}
          gerrit-patchset-number: ${{ inputs.GERRIT_PATCHSET_NUMBER }}
          vote-type: clear
      - name: Allow replication
        run: sleep 10s

  actionlint:
    needs: clear-vote
    runs-on: ubuntu-latest
    steps:
      - name: Checkout change
        uses: lfit/checkout-gerrit-change-action@v0.6
        with:
          gerrit-refspec: ${{ inputs.GERRIT_REFSPEC }}
          delay: "0s"
          gerrit-url: ${{ vars.GERRIT_URL }}
      - name: Download actionlint
        id: get_actionlint
        # yamllint disable-line rule:line-length
        run: bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
        shell: bash
      - name: Check workflow files
        run: ${{ steps.get_actionlint.outputs.executable }} -color
        shell: bash

  pre-commit:
    needs: clear-vote
    runs-on: ubuntu-latest
    steps:
      - name: Checkout change
        uses: lfit/checkout-gerrit-change-action@v0.6
        with:
          gerrit-refspec: ${{ inputs.GERRIT_REFSPEC }}
          delay: "0s"
          gerrit-url: ${{ vars.GERRIT_URL }}
      - name: Configure Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Run static analysis and format checkers
        # yamllint disable-line rule:line-length
        run: SKIP=actionlint pipx run pre-commit run --all-files --show-diff-on-failure

  docker:
    needs: clear-vote
    runs-on: ubuntu-latest
    steps:
      - uses: lfit/checkout-gerrit-change-action@v0.6
        with:
          gerrit-refspec: ${{ inputs.GERRIT_REFSPEC }}
          delay: "0s"
          gerrit-url: ${{ vars.GERRIT_URL }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            lfreleng/sigul
          # For git tag "v1.2.3", we will create image tags of "latest", "1",
          # "1.2", and "1.2.3".
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: "."
          push: false
          tags: ${{ steps.meta.outputs.tags }}

  vote:
    if: ${{ always() }}
    needs: [clear-vote, actionlint, pre-commit, docker]
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/workflow-conclusion-action@v3
      - name: Set vote
        uses: lfit/gerrit-review-action@v0.4
        with:
          host: ${{ vars.LFIT_GERRIT_SERVER }}
          username: ${{ vars.LFIT_GERRIT_SSH_USER }}
          key: ${{ secrets.LFIT_GERRIT_SSH_PRIVKEY_NP }}
          known_hosts: ${{ vars.LFIT_GERRIT_KNOWN_HOSTS }}
          gerrit-change-number: ${{ inputs.GERRIT_CHANGE_NUMBER }}
          gerrit-patchset-number: ${{ inputs.GERRIT_PATCHSET_NUMBER }}
          vote-type: ${{ env.WORKFLOW_CONCLUSION }}
